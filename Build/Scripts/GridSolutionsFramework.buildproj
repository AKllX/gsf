<?xml version="1.0" encoding="utf-8"?>

<!--
*******************************************************************************************************
**  GridSolutionFramework.buildproj - Gbtc
**
**  Copyright Â© 2013, Grid Protection Alliance.  All Rights Reserved.
**
**  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
**  the NOTICE file distributed with this work for additional information regarding copyright ownership.
**  The GPA licenses this file to you under the Eclipse Public License -v 1.0 (the "License"); you may
**  not use this file except in compliance with the License. You may obtain a copy of the License at:
**
**      http://www.opensource.org/licenses/eclipse-1.0.php
**
**  Unless agreed to in writing, the subject software distributed under the License is distributed on an
**  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
**  License for the specific language governing permissions and limitations.
**
**  Code Modification History:
**  ===================================================================================================
**  10/05/2009 - Pinal C. Patel
**       Generated original version of source code.
**  10/10/2009 - Pinal C. Patel
**       Modified to accommodate the change in file versioning.
**  10/13/2009 - Pinal C. Patel
**       Made building of help docs optional using SkipHelpFiles property.
**  10/15/2009 - Pinal C. Patel
**       Enabled unit testing.
**  10/19/2009 - Pinal C. Patel
**       Enabled archiving of binaries and installs.
**  10/20/2009 - Pinal C. Patel
**       Made deployment of archives to public locations switchable.
**  12/25/2010 - Pinal C. Patel
**       Generated original version of source code.
**  04/27/2010 - Pinal C. Patel
**       Moved initialization of version and project files to after the build has been initialized
**       so that they don't include files that have to deleted of moved since the last build.
**  04/28/2010 - Pinal C. Patel
**       Modified the build to output a set of signed class libraries by leveraging the newly added
**       ProjectsToBuild.Properties property.
**       Made building of strong-named class libraries optional using SkipSigning property.
**  08/04/2010 - Pinal C. Patel
**       Disabled automated zip file creation of binaries and installs.
**  11/02/2010 - Pinal C. Patel
**       Enabled automated zip file creation of binaries and installs.
**       Fixed a typo in ProjectsToBuild list initialization that was preventing signed assemblies 
**       from being created.
**       Enabled version change in AssemblyFileVersion attribute for all of the versioned projects.
**  01/08/2011 - Pinal C. Patel
**       Updated to set the TftServer property.
**       Updated to set versioning scheme settings.
**  02/04/2011 - Pinal C. Patel
**       Updated to set the TftServer property.
**       Updated to set versioning scheme settings.
**  03/17/2011 - Pinal C. Patel
**       Added the creation of nuget package.
**  05/31/2011 - Pinal C. Patel
**       Modified to create symbol packages to accompany NuGet library packages.
**  06/02/2011 - Pinal C. Patel
**       Modified to create NuGet sample packages.
**  07/22/2011 - Pinal C. Patel
**       Updated to skip NuGet package creation if versioning is skipped and added SkipNugetPackages
**       property to allow NuGet package creation to be skipped even when versioning is performed.
**  12/01/2011 - Pinal C. Patel
**       Updated to version and build setup packages.
**  02/08/2012 - Pinal C. Patel
**       Updated to support creation of pre-release NuGet packages and publishing NuGet packages to
**       the official NuGet.org packages feed.
**
*******************************************************************************************************
-->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="MasterBuild.buildproj"/>

	<PropertyGroup>
		<SkipNugetPackages></SkipNugetPackages>
		<VersionSource>true</VersionSource>
	</PropertyGroup>
	
  <Target Name="BeforePrepareSettings">
  
	<Error Condition="'$(NugetPackagesFolder)' == ''"  Text="Error: Location of Nuget Packages must be specified."/>
	<Error Condition="'$(BuildDeployFolder)' == ''" Text="Error: Drop location of the build content must be specified."/>
  
      <Message Text="Mark 1"/>
	<PropertyGroup>
      <!--Must-override setting(s).-->
      <ProjectName>GridSolutionsFramework</ProjectName>
      <TfsServer>https://tfs.codeplex.com/tfs/tfs07</TfsServer>
      <VersionBuildChange>Increment</VersionBuildChange>
      <VersionRevisionChange>Reset</VersionRevisionChange>
      <!-- Server folder does not match project name -->
      <ServerFolder>$/gsf/Main</ServerFolder>  
    </PropertyGroup>	
      <Message Text="Mark 2"/>
  </Target>

  <Target Name="AfterPrepareSettings">
      <Message Text="Before AfterPrepareSettings"/>
    <PropertyGroup>
      <!--Project specific settings.-->
      <ProjectSolution>$(LocalFolder)\Source\$(ProjectName).sln</ProjectSolution>
      <!--<PreRelease Condition="'$(PreRelease)' == ''">true</PreRelease>-->
      <Nuget>$(LocalFolder)\Build\Scripts\NuGet\NuGet.exe</Nuget> 
      <NugetPackagesFolder>$(NugetPackagesFolder)</NugetPackagesFolder> 
	  <BuildDeployFolder>$(BuildDeployFolder)</BuildDeployFolder>
	  </PropertyGroup>
  </Target>

  <Target Name="BeforeVersionSource">
    <Message Text="VersionSource = --$(VersionSource)--"/>	
    <Message Text="SkipNugetPackages = --$(SkipNugetPackages)--"/>	
      <Message Text="Before BeforeVersionSource"/>
    <ItemGroup>
      <!--List of files to be versioned.-->
      <FilesToVersion Include="$(LocalFolder)\Source\**\AssemblyInfo.*">
        <VersionRegex>(?'BeforeVersion'AssemblyVersion\(%22)(?'CoreVersion'(\*|\d+)\.)+(\*|\d+)(?'AfterVersion'%22\))</VersionRegex>
        <VersionPrecision>4</VersionPrecision>
      </FilesToVersion>
      <FilesToVersion Include="$(LocalFolder)\Source\**\AssemblyInfo.*">
        <VersionRegex>(?'BeforeVersion'AssemblyFileVersion\(%22)(?'CoreVersion'(\*|\d+)\.)+(\*|\d+)(?'AfterVersion'%22\))</VersionRegex>
        <VersionPrecision>4</VersionPrecision>
      </FilesToVersion>
    </ItemGroup>
  </Target>

  <Target Name="BeforeBuildProjects">
      <Message Text="Before BeforeVersionSource"/>
    <ItemGroup>
      <!--List of projects to build.-->
      <ProjectsToBuild Include="$(ProjectSolution)"/>	  
    </ItemGroup>
  </Target>

  <Target Name="BeforeExecuteUnitTests">
    <ItemGroup>
      <!--List of unit test assemblies.-->                          
      <UnitTestAssemblies Include="$(BuildOutputFolder)\**\*.Tests.dll"/>
    </ItemGroup>
  </Target>

  <Target Name="AfterExecuteUnitTests">
    <!--Clean-up after all unit tests have been executed and passed.-->
    <RemoveDir Directories="%(UnitTestAssemblies.RootDir)%(UnitTestAssemblies.Directory)" Condition="Exists('%(UnitTestAssemblies.RootDir)%(UnitTestAssemblies.Directory)')"/>
  </Target>

  <Target Name="BeforeDeployBuild">
    <ItemGroup>
      <!--List of binaries to archive.-->
      <BinariesToArchive Include="$(BuildOutputFolder)\**\*.*" Exclude="$(BuildOutputFolder)\**\*.msi"/>
      <!--List of installs to archive.-->
      <InstallsToArchive Include="$(BuildOutputFolder)\**\*.msi"/>
      <!--Destinations of archive files (*.zip).-->
      <ArchiveDestinations Include="$(BuildDeployFolder)"/>
    </ItemGroup>
  </Target>

  <Target Name="AfterDeployBuild" Condition="'$(VersionSource)' == 'true' And '$(SkipNugetPackages)' == ''">
  
    <!-- Delete existing nuget packages. -->
    <Message Text="Deleting nuget packages..."/>	
    <ItemGroup>
      <NugetPackages Include="$(NugetPackagesFolder)\GSF.*.$(Major).$(Minor).$(Build)*.nupkg"/>
    </ItemGroup>	
    <Delete Files="@(NugetPackages)"/>
	
    <!-- Create nuget packages. -->
    <Message Text="Creating nuget library packages..."/>
    <ItemGroup>
      <NugetLibraries Include="$(LocalFolder)\Source\Libraries\**\*.csproj" Exclude="$(LocalFolder)\Source\Libraries\Tests\**\*.csproj"/>
    </ItemGroup>
    <Exec Command="%22$(Nuget)%22 pack %22%(NugetLibraries.FullPath)%22 /Version $(Major).$(Minor).$(Build) /Symbols /Properties Configuration=$(BuildFlavor) /OutputDirectory %22$(NugetPackagesFolder)%22" Condition="'$(PreRelease)' != 'true'"/>
    <Exec Command="%22$(Nuget)%22 pack %22%(NugetLibraries.FullPath)%22 /Version $(Major).$(Minor).$(Build)-beta$(Revision) /Symbols /Properties Configuration=$(BuildFlavor) /OutputDirectory %22$(NugetPackagesFolder)%22" Condition="'$(PreRelease)' == 'true'"/>
    <Message Text="Creating nuget samples packages..."/>
    <ItemGroup>
      <NugetSamples Include="$(LocalFolder)\Build\Scripts\**\*.nuspec"/>
    </ItemGroup>
    <Exec Command="%22$(Nuget)%22 pack %22%(NugetSamples.FullPath)%22 /Version $(Major).$(Minor).$(Build) /OutputDirectory %22$(NugetPackagesFolder)%22" Condition="'$(PreRelease)' != 'true'"/>
    <Exec Command="%22$(Nuget)%22 pack %22%(NugetSamples.FullPath)%22 /Version $(Major).$(Minor).$(Build)-beta$(Revision) /OutputDirectory %22$(NugetPackagesFolder)%22" Condition="'$(PreRelease)' == 'true'"/>
 
 <!-- Publish nuget packages. -->
    <Message Text="Publishing nuget packages to NuGet.org..."/>
    <ItemGroup>
      <NugetPackages Remove="@(NugetPackages)"/>
      <NugetPackages Include="$(NugetPackagesFolder)\GSF.*.$(Major).$(Minor).$(Build)*.nupkg" Exclude="$(NugetPackagesFolder)\GSF.*.$(Major).$(Minor).$(Build)*.symbols.nupkg"/>
    </ItemGroup>
    <Exec Command="%22$(Nuget)%22 push %22%(NugetPackages.FullPath)%22 $(NugetApiKey)" Condition="'@(NugetPackages)' != ''"/>
  </Target>

</Project>