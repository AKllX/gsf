<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.35" Name="TVA Code Library Standards Check">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">http://www.gotdotnet.com/team/fxcop//xsl/1.35/FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-us" />
  <VersionAware>False</VersionAware>
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
 </ProjectOptions>
 <Targets>
  <Target Name="$(ProjectDir)/bin/Tva.Core.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.35">
  <Namespaces>
   <Namespace Name="Tva">
    <Messages>
     <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Created="2005-12-29 18:09:32Z">
      <Issue>
       <Item>Tva</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
  </Namespaces>
  <Targets>
   <Target Name="$(ProjectDir)/bin/Tva.Core.dll">
    <Modules>
     <Module Name="tva.core.dll">
      <Messages>
       <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Excluded" Created="2005-12-28 18:46:58Z">
        <Issue Name="NoStrongName">
         <Item>Tva.Core</Item>
        </Issue>
        <Notes>
         <User Name="jrcarrol">
          <Note Id="1" />
         </User>
        </Notes>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="Tva">
        <Types>
         <Type Name="Assembly">
          <Members>
           <Member Name="CLSCompliant">
            <Messages>
             <Message Id="Member" TypeName="LongAcronymsShouldBePascalCased" Category="Microsoft.Naming" CheckId="CA1705" Created="2005-12-29 18:09:32Z">
              <Issue Name="Member">
               <Item>Assembly.CLSCompliant:Boolean</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="CodeBase">
            <Accessors>
             <Accessor Name="get_CodeBase():System.String">
              <Messages>
               <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2005-12-29 18:09:32Z">
                <Issue>
                 <Item>Assembly.get_CodeBase():String</Item>
                 <Item>System.String.ToLower</Item>
                 <Item>System.String.ToLower(System.Globalization.CultureInfo)</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="ComCompatibleVersion">
            <Accessors>
             <Accessor Name="get_ComCompatibleVersion():System.String">
              <Messages>
               <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2005-12-29 18:09:32Z">
                <Issue>
                 <Item>Assembly.get_ComCompatibleVersion():String</Item>
                 <Item>System.Int32.ToString</Item>
                 <Item>System.Int32.ToString(System.IFormatProvider)</Item>
                </Issue>
                <Issue>
                 <Item>Assembly.get_ComCompatibleVersion():String</Item>
                 <Item>System.Int32.ToString</Item>
                 <Item>System.Int32.ToString(System.IFormatProvider)</Item>
                </Issue>
                <Issue>
                 <Item>Assembly.get_ComCompatibleVersion():String</Item>
                 <Item>System.Int32.ToString</Item>
                 <Item>System.Int32.ToString(System.IFormatProvider)</Item>
                </Issue>
                <Issue>
                 <Item>Assembly.get_ComCompatibleVersion():String</Item>
                 <Item>System.Int32.ToString</Item>
                 <Item>System.Int32.ToString(System.IFormatProvider)</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="GACLoaded">
            <Messages>
             <Message Id="Member" TypeName="LongAcronymsShouldBePascalCased" Category="Microsoft.Naming" CheckId="CA1705" Created="2005-12-29 18:09:32Z">
              <Issue Name="Member">
               <Item>Assembly.GACLoaded:Boolean</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="GetAttributes():System.Collections.Specialized.NameValueCollection">
            <Messages>
             <Message Id="System.DateTime.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>Assembly.GetAttributes():NameValueCollection</Item>
               <Item>System.DateTime.ToString</Item>
               <Item>System.DateTime.ToString(System.IFormatProvider)</Item>
              </Issue>
             </Message>
             <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Created="2005-12-29 18:09:32Z">
              <Issue Certainty="50">
               <Item>GetAttributes</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="GetCustomAttribute(System.Type):System.Object">
            <Messages>
             <Message Id="System.ApplicationException.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>Assembly.GetCustomAttribute(Type):Object</Item>
               <Item>1</Item>
               <Item>ApplicationException.ApplicationException(String)</Item>
               <Item>Assembly does not expose this attribute</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2005-12-29 18:09:32Z">
              <Issue Name="TooGeneric">
               <Item>Assembly.GetCustomAttribute(Type):Object</Item>
               <Item>System.ApplicationException</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="LoadAssemblyFromResource(System.String):System.Void">
            <Messages>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>Assembly.LoadAssemblyFromResource(String):Void</Item>
               <Item>AppDomain.add_AssemblyResolve(ResolveEventHandler):Void</Item>
               <Item>&#xD;&#xA;-&gt;System.AppDomain.add_AssemblyResolve(System.ResolveEventHandler) : Void&#xD;&#xA;-&gt;Tva.Assembly.LoadAssemblyFromResource(System.String) : Void</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="Location">
            <Accessors>
             <Accessor Name="get_Location():System.String">
              <Messages>
               <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2005-12-29 18:09:32Z">
                <Issue>
                 <Item>Assembly.get_Location():String</Item>
                 <Item>System.String.ToLower</Item>
                 <Item>System.String.ToLower(System.Globalization.CultureInfo)</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="ResolveAssemblyFromResource(System.Object,System.ResolveEventArgs):System.Reflection.Assembly">
            <Messages>
             <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>Assembly.ResolveAssemblyFromResource(Object, ResolveEventArgs):Assembly</Item>
               <Item>System.String.Compare(System.String,System.String,System.Boolean)</Item>
               <Item>System.String.Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="TypeLibVersion">
            <Accessors>
             <Accessor Name="get_TypeLibVersion():System.String">
              <Messages>
               <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2005-12-29 18:09:32Z">
                <Issue>
                 <Item>Assembly.get_TypeLibVersion():String</Item>
                 <Item>System.Int32.ToString</Item>
                 <Item>System.Int32.ToString(System.IFormatProvider)</Item>
                </Issue>
                <Issue>
                 <Item>Assembly.get_TypeLibVersion():String</Item>
                 <Item>System.Int32.ToString</Item>
                 <Item>System.Int32.ToString(System.IFormatProvider)</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
          </Members>
         </Type>
         <Type Name="Bit">
          <Members>
           <Member Name="HiByte(System.Int16):System.Byte">
            <Messages>
             <Message Id="Member" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2005-12-29 18:09:32Z">
              <Issue Name="Member">
               <Item>Hi</Item>
               <Item>Bit.HiByte(Int16):Byte</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="HiWord(System.Int32):System.Int16">
            <Messages>
             <Message Id="Member" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2005-12-29 18:09:32Z">
              <Issue Name="Member">
               <Item>Hi</Item>
               <Item>Bit.HiWord(Int32):Int16</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="LoByte(System.Int16):System.Byte">
            <Messages>
             <Message Id="Member" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2005-12-29 18:09:32Z">
              <Issue Name="Member">
               <Item>Lo</Item>
               <Item>Bit.LoByte(Int16):Byte</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="LoWord(System.Int32):System.Int16">
            <Messages>
             <Message Id="Member" TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706" Created="2005-12-29 18:09:32Z">
              <Issue Name="Member">
               <Item>Lo</Item>
               <Item>Bit.LoWord(Int32):Int16</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Tva.DateTime">
        <Types>
         <Type Name="Common">
          <Messages>
           <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Created="2005-12-29 18:09:32Z">
            <Issue>
             <Item>Common</Item>
             <Item>System.Data.Common</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="BaselinedTimestamp(System.DateTime):System.DateTime">
            <Messages>
             <Message Id="Baselined" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2005-12-29 18:09:32Z">
              <Issue Name="Member">
               <Item>Baselined</Item>
               <Item>Common.BaselinedTimestamp(DateTime):DateTime</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="GetWin32TimeZone(Tva.DateTime.Common+TimeZoneName,System.String):Tva.DateTime.Win32TimeZone">
            <Messages>
             <Message Id="System.ArgumentException.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>Common.GetWin32TimeZone(TimeZoneName, String):Win32TimeZone</Item>
               <Item>1</Item>
               <Item>ArgumentException.ArgumentException(String)</Item>
               <Item>Windows time zone with ____ of "____" was not found!</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>Common.GetWin32TimeZone(TimeZoneName, String):Win32TimeZone</Item>
               <Item>System.String.Compare(System.String,System.String,System.Boolean)</Item>
               <Item>System.String.Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)</Item>
              </Issue>
              <Issue>
               <Item>Common.GetWin32TimeZone(TimeZoneName, String):Win32TimeZone</Item>
               <Item>System.String.Compare(System.String,System.String,System.Boolean)</Item>
               <Item>System.String.Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)</Item>
              </Issue>
              <Issue>
               <Item>Common.GetWin32TimeZone(TimeZoneName, String):Win32TimeZone</Item>
               <Item>System.String.Compare(System.String,System.String,System.Boolean)</Item>
               <Item>System.String.Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)</Item>
              </Issue>
              <Issue>
               <Item>Common.GetWin32TimeZone(TimeZoneName, String):Win32TimeZone</Item>
               <Item>System.String.Compare(System.String,System.String,System.Boolean)</Item>
               <Item>System.String.Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)</Item>
              </Issue>
              <Issue>
               <Item>Common.GetWin32TimeZone(TimeZoneName, String):Win32TimeZone</Item>
               <Item>System.String.Compare(System.String,System.String,System.Boolean)</Item>
               <Item>System.String.Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="LocalTimeTo(System.DateTime,Tva.DateTime.Win32TimeZone):System.DateTime">
            <Messages>
             <Message TypeName="ValidateArgumentsOfPublicMethods" Category="Microsoft.Design" CheckId="CA1062" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>'destinationTimeZone'</Item>
               <Item>Common.LocalTimeTo(DateTime, Win32TimeZone):DateTime</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="LocalTimeToCentralTime(System.DateTime):System.DateTime">
            <Messages>
             <Message Id="TimeStamp" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2005-12-29 18:09:32Z">
              <Issue Name="ShouldBeDiscreteTerm">
               <Item>TimeStamp</Item>
               <Item>parameter</Item>
               <Item>localTimeStamp</Item>
               <Item>Timestamp</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="LocalTimeToEasternTime(System.DateTime):System.DateTime">
            <Messages>
             <Message Id="TimeStamp" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2005-12-29 18:09:32Z">
              <Issue Name="ShouldBeDiscreteTerm">
               <Item>TimeStamp</Item>
               <Item>parameter</Item>
               <Item>localTimeStamp</Item>
               <Item>Timestamp</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="LocalTimeToMountainTime(System.DateTime):System.DateTime">
            <Messages>
             <Message Id="TimeStamp" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2005-12-29 18:09:32Z">
              <Issue Name="ShouldBeDiscreteTerm">
               <Item>TimeStamp</Item>
               <Item>parameter</Item>
               <Item>localTimeStamp</Item>
               <Item>Timestamp</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="LocalTimeToPacificTime(System.DateTime):System.DateTime">
            <Messages>
             <Message Id="TimeStamp" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2005-12-29 18:09:32Z">
              <Issue Name="ShouldBeDiscreteTerm">
               <Item>TimeStamp</Item>
               <Item>parameter</Item>
               <Item>localTimeStamp</Item>
               <Item>Timestamp</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="LongMonthName[System.Int16]">
            <Accessors>
             <Accessor Name="get_LongMonthName(System.Int16):System.String">
              <Messages>
               <Message Id="monthNumber-1" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Created="2005-12-29 18:09:32Z">
                <Issue>
                 <Item>monthNumber-1</Item>
                 <Item>Common.get_LongMonthName(Int16):String</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="SecondsToText(System.Single,System.Int32,System.String[]):System.String">
            <Messages>
             <Message Id="System.Single.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
               <Item>System.Single.ToString(System.String)</Item>
               <Item>System.Single.ToString(System.String,System.IFormatProvider)</Item>
              </Issue>
             </Message>
             <Message TypeName="ValidateArgumentsOfPublicMethods" Category="Microsoft.Design" CheckId="CA1062" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
              <Issue>
               <Item>'timeNames'</Item>
               <Item>Common.SecondsToText(Single, Int32, String[]):String</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="ShortMonthName[System.Int16]">
            <Accessors>
             <Accessor Name="get_ShortMonthName(System.Int16):System.String">
              <Messages>
               <Message Id="monthNumber-1" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Created="2005-12-29 18:09:32Z">
                <Issue>
                 <Item>monthNumber-1</Item>
                 <Item>Common.get_ShortMonthName(Int16):String</Item>
                </Issue>
               </Message>
              </Messages>
             </Accessor>
            </Accessors>
           </Member>
           <Member Name="TimeZoneToTimeZone(System.DateTime,Tva.DateTime.Win32TimeZone,Tva.DateTime.Win32TimeZone):System.DateTime">
            <Messages>
             <Message TypeName="ValidateArgumentsOfPublicMethods" Category="Microsoft.Design" CheckId="CA1062" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>'destinationTimeZone'</Item>
               <Item>Common.TimeZoneToTimeZone(DateTime, Win32TimeZone, Win32TimeZone):DateTime</Item>
              </Issue>
              <Issue>
               <Item>'sourceTimeZone'</Item>
               <Item>Common.TimeZoneToTimeZone(DateTime, Win32TimeZone, Win32TimeZone):DateTime</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="DaylightTimeChange">
          <Members>
           <Member Name=".ctor(System.Int32,System.DayOfWeek,System.Int32,System.TimeSpan)">
            <Messages>
             <Message Id="System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>DaylightTimeChange.New(Int32, DayOfWeek, Int32, TimeSpan)</Item>
               <Item>3</Item>
               <Item>ArgumentOutOfRangeException.ArgumentOutOfRangeException(String, Object, String)</Item>
               <Item>The day of week index must be between 0 and 4, inclusive.</Item>
              </Issue>
              <Issue>
               <Item>DaylightTimeChange.New(Int32, DayOfWeek, Int32, TimeSpan)</Item>
               <Item>3</Item>
               <Item>ArgumentOutOfRangeException.ArgumentOutOfRangeException(String, Object, String)</Item>
               <Item>The day of week must be between Sunday and Saturday.</Item>
              </Issue>
              <Issue>
               <Item>DaylightTimeChange.New(Int32, DayOfWeek, Int32, TimeSpan)</Item>
               <Item>3</Item>
               <Item>ArgumentOutOfRangeException.ArgumentOutOfRangeException(String, Object, String)</Item>
               <Item>The month must be between 1 and 12, inclusive.</Item>
              </Issue>
              <Issue>
               <Item>DaylightTimeChange.New(Int32, DayOfWeek, Int32, TimeSpan)</Item>
               <Item>3</Item>
               <Item>ArgumentOutOfRangeException.ArgumentOutOfRangeException(String, Object, String)</Item>
               <Item>The time of the day must be less than one day, and not negative.</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="NtpTimeTag">
          <Messages>
           <Message Id="Ntp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2005-12-29 18:09:32Z">
            <Issue Name="Type">
             <Item>Ntp</Item>
             <Item>Tva.DateTime.NtpTimeTag</Item>
            </Issue>
           </Message>
           <Message TypeName="OverrideMethodsOnComparableTypes" Category="Microsoft.Design" CheckId="CA1036" Created="2005-12-29 18:09:32Z">
            <Issue Name="Operator">
             <Item>NtpTimeTag</Item>
             <Item>!=</Item>
            </Issue>
            <Issue Name="Operator">
             <Item>NtpTimeTag</Item>
             <Item>&lt;</Item>
            </Issue>
            <Issue Name="Operator">
             <Item>NtpTimeTag</Item>
             <Item>==</Item>
            </Issue>
            <Issue Name="Operator">
             <Item>NtpTimeTag</Item>
             <Item>&gt;</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="CompareTo(System.Object):System.Int32">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2005-12-29 18:09:32Z">
              <Issue Name="Parameter">
               <Item>obj</Item>
               <Item>Tva.DateTime.NtpTimeTag</Item>
               <Item>NtpTimeTag.CompareTo(Object):Int32</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message Id="System.ArgumentException.#ctor(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>NtpTimeTag.CompareTo(Object):Int32</Item>
               <Item>1</Item>
               <Item>ArgumentException.ArgumentException(String)</Item>
               <Item>NtpTimeTag can only be compared with other NtpTimeTags...</Item>
              </Issue>
             </Message>
             <Message Id="Ntp" TypeName="LiteralsShouldBeSpelledCorrectly" Category="Microsoft.Usage" CheckId="CA2204" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>Ntp</Item>
               <Item>NtpTimeTag</Item>
              </Issue>
              <Issue>
               <Item>Ntp</Item>
               <Item>NtpTimeTags</Item>
              </Issue>
             </Message>
             <Message TypeName="ValidateArgumentsOfPublicMethods" Category="Microsoft.Design" CheckId="CA1062" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>'obj'</Item>
               <Item>NtpTimeTag.CompareTo(Object):Int32</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="ToString():System.String">
            <Messages>
             <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>NtpTimeTag.ToString():String</Item>
               <Item>System.DateTime.ToString(System.String)</Item>
               <Item>System.DateTime.ToString(System.String,System.IFormatProvider)</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TimeZones">
          <Members>
           <Member Name=".cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>Tva.DateTime.TimeZones</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="GetTimeZone(System.Int32):Tva.DateTime.Win32TimeZone">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>TimeZones.GetTimeZone(Int32):Win32TimeZone</Item>
               <Item>System.Exception</Item>
              </Issue>
              <Issue>
               <Item>TimeZones.GetTimeZone(Int32):Win32TimeZone</Item>
               <Item>System.Exception</Item>
              </Issue>
              <Issue>
               <Item>TimeZones.GetTimeZone(Int32):Win32TimeZone</Item>
               <Item>System.Exception</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="GetTimeZones():Tva.DateTime.Win32TimeZone[]">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2005-12-29 18:09:32Z">
              <Issue>
               <Item>TimeZones.GetTimeZones():Win32TimeZone[]</Item>
               <Item>System.Exception</Item>
              </Issue>
              <Issue>
               <Item>TimeZones.GetTimeZones():Win32TimeZone[]</Item>
               <Item>System.Exception</Item>
              </Issue>
              <Issue>
               <Item>TimeZones.GetTimeZones():Win32TimeZone[]</Item>
               <Item>System.Exception</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Notes>
   <User Name="jrcarrol">
    <Note Id="1" Modified="2005-12-28 19:52:33Z">The code library is not intended to used from the GAC...</Note>
   </User>
  </Notes>
  <Rules>
   <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
    <Resolution Name="NoStrongName">Sign '{0}' with a strong name key.</Resolution>
   </Rule>
   <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
    <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   </Rule>
   <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
    <Resolution Name="ShouldBeDiscreteTerm">The compound word '{0}' in {1} '{2}' exists as a discrete term. If your usage is intended to be single word, case it as '{3}'.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
    <Resolution Name="Parameter">'{0}', a parameter, is cast to type '{1}' multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
    <Resolution Name="Default">Modify '{0}' to catch a more specific exception than '{1}' or rethrow the exception.</Resolution>
   </Rule>
   <Rule TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122">
    <Resolution Name="Default">{0} calls into {1} which has a LinkDemand. By making this call, {1} is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: {2}</Resolution>
   </Rule>
   <Rule TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303">
    <Resolution Name="Default">{0} passes a literal as parameter {1} of a call to {2}. Retrieve the following string argument from a resource table instead: '{3}'</Resolution>
   </Rule>
   <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
    <Resolution Name="TooGeneric">{0} creates an exception of type '{1}', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
    <Resolution Name="Member">Correct the spelling of the unrecognized token '{0}' in member name '{1}'.</Resolution>
    <Resolution Name="Type">Correct the spelling of the unrecognized token '{0}' in type name '{1}'.</Resolution>
   </Rule>
   <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
    <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   </Rule>
   <Rule TypeName="LiteralsShouldBeSpelledCorrectly" Category="Microsoft.Usage" CheckId="CA2204">
    <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   </Rule>
   <Rule TypeName="LongAcronymsShouldBePascalCased" Category="Microsoft.Naming" CheckId="CA1705">
    <Resolution Name="Member">Correct the capitalization of member name '{0}'.</Resolution>
   </Rule>
   <Rule TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233">
    <Resolution Name="Default">Correct the potential overflow in the operation '{0}' in '{1}'.</Resolution>
   </Rule>
   <Rule TypeName="OverrideMethodsOnComparableTypes" Category="Microsoft.Design" CheckId="CA1036">
    <Resolution Name="Operator">{0} should define operator '{1}' since it implements IComparable.</Resolution>
   </Rule>
   <Rule TypeName="ShortAcronymsShouldBeUppercase" Category="Microsoft.Naming" CheckId="CA1706">
    <Resolution Name="Member">Correct the capitalization of '{0}' in member name '{1}'.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
    <Resolution Name="Default">{0} makes a call to {1} that does not explicitly provide a CultureInfo. This should be replaced with a call to {2}.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
    <Resolution Name="Default">{0} makes a call to {1} that does not explicitly provide an IFormatProvider. This should be replaced with a call to {2}.</Resolution>
   </Rule>
   <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
    <Resolution Name="Default">The type name '{0}' conflicts in whole or in part with the namespace name '{1}'. Change either name to eliminate the conflict.</Resolution>
   </Rule>
   <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
    <Resolution Name="Default">Change '{0}' to a property if appropriate.</Resolution>
   </Rule>
   <Rule TypeName="ValidateArgumentsOfPublicMethods" Category="Microsoft.Design" CheckId="CA1062">
    <Resolution Name="Default">Validate parameter {0} passed to externally visible method {1}.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
